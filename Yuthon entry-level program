import random
import time
import sys

moves = ['rock', 'paper', 'scissors']


class Player:
    my_move = random.choice(moves)
    their_move = random.choice(moves)

    def move(self):
        return 'rock'

    def learn(self, my_move, their_move):
        self.my_move = my_move
        self.their_move = their_move


class PlayerName(Player):
    def tell_name():
        global me
        me = input("Player please enter you name:\n")


class RandomPlayer(Player):
    def move(self):
        my_move = random.choice(moves)
        return my_move


class HumanPlayer(Player):
    def move(self):
        self.my_move = input(me + " Please enter the move you choose"
                             " between: Rock, Scissors, Paper? :\n").lower()
        while self.my_move not in moves:
            self.move()
        return self.my_move


class ReflectPlayer(Player):
    def move(self):
        return self.their_move

    def tell_name():
        pass


class Cycleplayer(Player):
    def move(self):
        if self.my_move == "paper":
            return "scissors"
        elif self.my_move == "scissors":
            return "rock"
        elif self.my_move == "rock":
            return "paper"


class Game:
    p1_score = 0
    p2_score = 0

    def __init__(self, p1, p2):
        self.p1 = p1
        self.p2 = p2

    def level_player():
        print("Game start!")
        response2 = input("Please choose your level !\n"
                         "Enter: 1 easy, 2 easy/medium, 3 medium and 4 hard:\n")
        if '1' in response2:
           game = Game(Player(), HumanPlayer())
           game.play_game()
        elif '2' in response2:
            game = Game(ReflectPlayer(), HumanPlayer())
            game.play_game()
        elif '3' in response2:
            game = Game(Cycleplayer(), HumanPlayer())
            game.play_game()
        elif '4' in response2:
            game = Game(RandomPlayer(), HumanPlayer())
            game.play_game()


    def beats(self, one, two):
        return ((one == 'rock' and two == 'scissors') or
                (one == 'scissors' and two == 'paper') or
                (one == 'paper' and two == 'rock'))

    def print_pause(self, message):
        print(message)
        time.sleep(1)

    def play_round(self):
        move1 = self.p1.move()
        move2 = self.p2.move()
        print("\n"f"Computer: {move1}\t " + me + f": {move2}")
        if self.beats(move1, move2):
            self.p1_score += 1
            self.print_pause(f"YOU LOST! Score Computer:{self.p1_score}"
                             " \t Score " + me + f":{self.p2_score}\n")
        elif self.beats(move2, move1):
            self.p2_score += 1
            self.print_pause(f"YOU WON! Score Computer:{self.p1_score}"
                             " \t Score " + me + f":{self.p2_score}\n")
        else:
            self.print_pause(f"DRAW! Score Computer:{self.p1_score}"
                             " \t Score " + me + f":{self.p2_score}\n")
        self.p1.learn(move1, move2)
        self.p2.learn(move2, move1)

    def final_score(self):
        if self.p1_score > self.p2_score:
            self.print_pause(f"{me} You Lost sorry, try again !!")
        elif self.p2_score > self.p1_score:
            self.print_pause(f"{me} You won , well done !!")
        elif self.p1_score == self.p2_score:
            print("well it's Draw my friend " + me)

    def winner_score(self):
        if self.p1_score == self.p2_score + 3:
            self.print_pause("Game Over")
            print("You Lost with 3 points difference!!")
            self.play_again()
        elif self.p2_score == self.p1_score + 3:
            self.print_pause("Game Over")
            print("You Won with 3 points difference!!")
            self.play_again()

    def play_again(self):
        response = input("Fancy another game ? "
                         "(please enter:  1 for 'Yes' and 2 for 'No'):\n")
        if '1'in response:
            if __name__ == '__main__':
                Game.level_player()
        elif response == '2':
            print("Goodbye, thanks for playing")
            sys.exit()
        else:
            self.play_again()

    def play_game(self):
        PlayerName.tell_name()
        for round in range(1, 8):
            self.print_pause(f"Round {round}:")
            self.play_round()
            self.winner_score()
        self.final_score()
        self.play_again()
        print("Game over!")
